;;0_TEXTBOOK
(define (make-account balance)
  (define (withdraw amount)
    (if (>= balance amount)
	(begin (set! balance (- balance amount))
	       balance)
	"Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (dispatch m)
    (cond ((eq? m 'withdraw) withdraw)
	  ((eq? m 'deposit) deposit)
	  (else (error "Uknown request -- MAKE-ACCOUNT" m))))
  dispatch)

;;1.1_LAMBDA
(define make-account-lambda
  (lambda (balance)
    (lambda (m)
      (define withdraw (lambda (amount)
			 (if (>= balance amount)
			     (begin (set! balance (- balance amount))
				    balance)
			     "Insufficient funds")))
      (define deposit (lambda (amount)
			(set! balance (+ balance amount))
			balance))
      (cond ((eq? m 'withdraw) withdraw)
	    ((eq? m 'deposit) deposit)
	    (else (error "Uknown request -- MAKE-ACCOUNT" m))))
    )
  )

;;1.2_INLINE
(define (make-account-inline balance)
  (define (dispatch m)
    (cond ((eq? m 'withdraw) (lambda (amount) (if (>= balance amount)
				 (begin (set! balance (- balance amount))
					balance)
				 "Insufficient funds")))
	  ((eq? m 'deposit) (lambda (amount) (set! balance (+ balance amount))
			     balance))
	  (else (error "Uknown request -- MAKE-ACCOUNT" m))
	  )
    )
  dispatch
  )

;;1.3_FACTORED
(define (make-account-inline-factored balance)
   (lambda (m)
    (lambda (amount) (cond ((eq? m 'withdraw) (if (>= balance amount)
						   (begin (set! balance (- balance amount))
							  balance)
						   "Insufficient funds"))
			   ((eq? m 'deposit) ((set! balance (+ balance amount))
					      balance))
			   (else (error "Uknown request -- MAKE-ACCOUNT" m))
			   )
	    )
    )
   )

;;3_

(define make-monitored
  (lambda (function)
    (define count 0)
    (lambda (x)
      (cond ((eq? x 'how-many-calls?) count)
	    ((eq? x 'reset-count) (set! count 0))
	    (else (set! count (+ 1 count)) (function x)))
      )
    )
  )

;;4_3.3

(define make-pw-account
  (lambda (balance password)
    (lambda (input m)
      (if (eq? input password)
	  (lambda (amount) (cond ((eq? m 'withdraw) (if (>= balance amount)
							(begin (set! balance (- balance amount))
							       balance)
							"Insufficient funds"))
				 ((eq? m 'deposit) (set! balance (+ amount balance))
						    balance)
				 (else (error "Uknown request -- MAKE-ACCOUNT" m))))
	  (error "Password incorrect."))
      )
    )
  )
